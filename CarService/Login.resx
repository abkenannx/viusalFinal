<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>